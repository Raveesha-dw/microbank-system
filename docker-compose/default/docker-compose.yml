services:
  rabbit:
    image:  rabbitmq:3.13.7-management
    hostname: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    healthcheck:
      test: rabbitmq-diagnostics check_port_activity
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 5s
    networks:
      - EliteInvest
  configserver:
    image: "raveeshaward/configserver:1.0.0"
    container_name: configserver-ms
    ports:
      - "8071:8071"
    depends_on:  # if depends_on: rabbit is given, the configserver will start after rabbit has started and will not wait for it to be ready. Will continue to run even if Rabbit fails
      rabbit:
        condition: service_healthy
    healthcheck:
      test: "curl --fail --silent localhost:8071/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    deploy:
      resources:
        limits:
          memory: 700m
    networks:
      - EliteInvest
  accounts:
    image: "raveeshaward/accounts:1.1.0"
    container_name: accounts-ms
    ports:
      - "8080:8080"
    depends_on:
      configserver:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 700m
    networks:
      - EliteInvest
    environment:
      SPRING_APPLICATION_NAME: "accounts"
      SPRING_CONFIG_IMPORT: "configserver:http://configserver:8071/"
      SPRING_PROFILES_ACTIVE: default
  loans:
    image: "raveeshaward/loans:1.1.0"
    container_name: loans-ms
    ports:
      - "8090:8090"
    depends_on:
      configserver:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 700m
    networks:
      - EliteInvest
    environment:
      SPRING_APPLICATION_NAME: "loans"
      SPRING_CONFIG_IMPORT: "configserver:http://configserver:8071/"
      SPRING_PROFILES_ACTIVE: default
  cards:
    image: "raveeshaward/cards:1.1.0"
    container_name: cards-ms
    ports:
      - "9000:9000"
    depends_on:
      configserver:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 700m
    networks:
      - EliteInvest
    environment:
      SPRING_APPLICATION_NAME: "cards"
      SPRING_CONFIG_IMPORT: "configserver:http://configserver:8071/"
      SPRING_PROFILES_ACTIVE: default
networks:
  EliteInvest:
    driver: "bridge"  #docker will create a bridge where all microservices within the network can communicate with each other
